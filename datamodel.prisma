type User {
  id: ID! @id
  username: String! @unique
  email: String! @unique
  isAdmin: Boolean @default(value: false)
  loginSecret: String
  loginSecretIssuedAt: DateTime
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Group {
  id: ID! @id
  name: String! @unique
  description: String!
  images: [File!]! @relation(name: "FilesOfGroup", onDelete:CASCADE)
  markers: [Marker!]! @relation(name: "MarkerOfGroup", onDelete:CASCADE)
  reports: [Report!]! @relation(name: "ReportOfGroup")
  references: [Reference!]! @relation(name: "GroupOfReference")
  checkList: [CheckList!]! @relation(name: "CheckListOfGroup", onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type File {
  id: ID! @id
  url: String!
  caption: String!
  group: Group @relation(name: "FilesOfGroup")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Report {
  id: ID! @id
  type: ReportType! @relation(name:"ReportOfReportType")
  description: String!
  marker: Marker @relation(name: "ReportOfMarker")
  group: Group @relation(name: "ReportOfGroup")
  responseMail: String
  isProcessed: Boolean @default(value: false)
  responseText: String @default(value: "")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ReportType {
  id: ID! @id
  value: String! @unique
  reports:[Report!] @relation(name: "ReportOfReportType", onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Marker {
  id: ID! @id
  isDeleted: Boolean @default(value: false)
  group: Group! @relation(name: "MarkerOfGroup")
  latitude: Float!
  longitude: Float!
  title: String!
  description: String!
  address: String!
  reports: [Report!]! @relation(name: "ReportOfMarker")
  reference: Reference! @relation(name: "MarkerOfReference")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CheckList {
  id: ID! @id
  name: String! @unique
  problem: String!
  evaluations: [CheckListEvaluation!]! @relation(name:"EvaluationOfCheckList", onDelete:CASCADE)
  group: Group! @relation(name: "CheckListOfGroup")
  reference: Reference! @relation(name: "CheckListOfReference")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type CheckListEvaluation {
  id:ID! @id
  from: Int!
  to: Int!
  minCheckNum: Int!
  judge: String!
  checkList: CheckList! @relation(name:"EvaluationOfCheckList")
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type Reference {
  id: ID! @id
  name: String! @unique
  url: String! @unique
  checkLists: [CheckList!]! @relation(name: "CheckListOfReference", onDelete:CASCADE)
  markers: [Marker!]! @relation(name: "MarkerOfReference", onDelete:CASCADE)
  groups: [Group!]! @relation(name: "GroupOfReference", onDelete:CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ClinicCenter {
  id:ID! @id
  name: String! @unique
  phoneNumber: String
  url: String!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}